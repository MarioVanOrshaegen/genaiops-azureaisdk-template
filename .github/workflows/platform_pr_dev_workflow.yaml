name: platform_pr_dev_workflow

on:
  workflow_call:
    inputs:
      env_name:
        type: string
        description: "Execution Environment"
        required: true
        default: "pr"
      use_case_base_path:
        type: string
        description: "The flow use-case to execute"
        required: true
        default: "math_coding"
  workflow_dispatch:
    inputs:
      env_name:
        type: string
        description: "Execution Environment"
        required: true
        default: "pr"
      use_case_base_path:
        type: string
        description: "The flow use-case to execute"
        required: true
        default: "math_coding"


jobs:
  pr_flow_validation:
    runs-on: ubuntu-latest
    environment: "${{ inputs.env_name }}"
    env:
      RESOURCE_GROUP_NAME: ${{ vars.RESOURCE_GROUP_NAME }}
      WORKSPACE_NAME: ${{ vars.PROJECT_NAME }}
    steps:
      - name: Checkout Actions
        uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.azure_credentials }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r .github/requirements/build_validation_requirements.txt -U
          pip install -e .
              
      - name: Python code linting
        run:  flake8 ./llmops ./tests
  
      - name: Execute Unit Tests
        shell: bash
        run: |
          pytest ./tests/ --junitxml=junit/test-results.xml --cov=. --cov-report=xml
  
      - name: Publish Unit Test Results
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-results
          path: "**/test-*.xml"

      - name: Create .env file
        env: 
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
        run: |
          echo "$SECRETS_CONTEXT" | jq -r 'to_entries | .[] | "\(.key)=\(.value)"' > .env
            
          echo "=== .env file location ==="
          realpath .env
          pwd
          echo "Current directory: $PWD/.env"
            
          echo -e "\n=== .env file content (masked) ==="
          while IFS='=' read -r key value; do
            if [ ! -z "$key" ]; then
              echo "$key=***"
            fi
          done < .env
            
          echo -e "\n=== File permissions ==="
          ls -la .env
            
          echo -e "\n=== Directory structure ==="
          ls -la
            
          echo -e "\n=== Working directory structure ==="
          tree -a -L 2 || ls -R  # try t
  
          python -c "from dotenv import load_dotenv; load_dotenv()"
          echo "Created .env file with all secrets"
  
      - name: load .env file
        run: python -c "from dotenv import load_dotenv; load_dotenv()"
  
      - name: load the current Azure subscription details
        id: subscription_details
        shell: bash
        run: |
          export subscriptionId=$(az account show --query id -o tsv)
          echo "SUBSCRIPTION_ID=$subscriptionId" >> $GITHUB_OUTPUT

      - name: Execute AI SDK bulk run
        uses: ./.github/actions/execute_script
        with:
          step_name: "Execute AI SDK bulk run"
          script_parameter: |
            python -m llmops.eval_experiments \
            --environment_name ${{ inputs.env_name }} \
            --base_path ${{ inputs.use_case_base_path }} \
            --report_dir "."